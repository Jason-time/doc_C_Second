1. C프로그래밍 입문
	1.1 C언어 소개
	1.2 실습환경 구성(Visual Studio)
	1.3 첫 번째 예제, HelloWorld!
	1.4 프로그램의 기본 요소
	1.4.1 #include 전처리기
	1.4.2 스코프(Scope)와 구문
	1.4.3 함수
	1.4.4 빌드 타임에 벌어지는 일들

	#include<stdio.h>

int main(void) {

	printf("Hello, World!\n");
	return 0;
}
/*/================================//
 p.027 - First code
//================================/*/

2. 자료형
	2.1 변수와 상수
	2.1.1 C언어의 자료형
	2.1.2 보수와 음수 표현
	2.1.3 부호비트와 자료비트 그리고 표현범위
	2.2 정수 자료형과 변수, 상수
	2.2.1 char와 ASCII코드
	2.2.2 short, wchar_t
	2.2.3 int와 long
	2.3 실수 자료형
	2.3.1 float
	2.3.2 double
	2.4 문자와 문자(배)열
	2.5 이름과 주석문
	2.5.1 이름 짓기와 식별자
	2.5.2 주석문

#include<stdio.h>

int main(void) {

	char ch = 'A';
	wchar_t wch = L'A';
	short sData = 10;
	int nData = 10;
	long lData = 10L;
	long int lnData = 10L;
	long long int llnData = 10LL;

	unsigned char byNewData = 0;
	unsigned short sNewData = 65535U;
	unsigned int uNewData = 1U;
	unsigned long int ulNewData = 1UL;
	unsigned long long int ullNewData = 1ULL;

	return 0;
}
/*/================================//
 p.045 - integer01.c
//================================/*/

#include<stdio.h>
#include<float.h>

int main(void) {

	double dDataa = 123.456;

	printf("%f\n", dDataa);
	printf("%E - %E\n", DBL_MIN, DBL_MAX);

	return 0;
}
/*/================================//
 p.050 - DoubleRange.c
//================================/*/

#include<stdio.h>

int main(void) {

	char ch1 = 'A', ch2 = 'B', ch3 = 'C';
	char szData[4] = { 'A','B','C' };
	char szNewData[4] = { "ABC" };
	return 0;
}
/*/================================//
 p.051 - String01.c
//================================/*/

#include<stdio.h>

	/*
	이 구간의 코드는 모두 주석문입니다.
	*/

int main(void) {

	//결과를 저장하는 변수입니다.
	int nResult = 10;
	char ch = 'A';	//사용자 입력

	//printf("Hello, World!\n");
	return 0;
}
/*/================================//
 p.054 - Comment01.c
//================================/*/

3. 표준 입출력 도구
	3.1 문자 입출력
	3.1.1 getchar() / putchar()함수
	3.1.2 _getch() / _getche()함수
	3.2 문자열 입출력
	3.2.1 gets() / puts()함수
	3.2.2 gets() 함수와 보안 결함
	3.3 printf() 함수
	3.3.1 형식 문자와 이스케이프 시퀀스
	3.3.2 문자와 정수 출력
	3.3.3 실수와 지수 출력
	3.4 scanf()함수
	3.4.1 정수 입력
	3.4.2 두 정수의 입력 및 구분
	3.4.3 문자 입력
	3.4.4 문자열 입력

#include<stdio.h>

int main(void) {

	//자료형이 char 형식이고 이름이 ch인 변수의 선언 및 정의
	char ch = 0;
	
	//getchar() 함수가 반환한 값을 ch 변수에 저장한다.
	if ((ch = getchar()) < 1)
		printf("정상적으로 입력하지 않았습니다."); 
	//변수 ch 에 담겨 있는 정보를 화면에 출력한다.
	putchar(ch);
	//대문자 Z를 화면에 출력한다.
	putchar('Z');
	//0을 반환하고 main() 함수가 반환한다. (프로그램 종료)
	return 0;
}
/*/================================//
 p.059 - getchar01.c
//================================/*/

#include<stdio.h>
//_getch() 함수를 사용하기 위한 헤더 파일 포함
#include<conio.h>

int main(void) {

	char ch = 0;
	//사용자에게 전달할 메시지 (문자열) 출력
	printf("아무 키나 누르면 다음으로 넘어갑니다. \n");
	//사용자로부터 키보드 입력을 한 번 받는다. 사용자가 입력한 값을
	//_getch() 함수가 반환하면 이를 ch변수에 저장한다.
	ch = _getch();
	
	//사용자가 입력한 문자를 출력한다.
	printf("입력한 키는 ");
	putchar(ch);
	printf("입니다.\n");

	return 0;
}
/*/================================//
 p.062 - getch01.c
//================================/*/

#include<stdio.h>

int main(void) {

	//char변수 32개가 한 덩어리로 묶인 배열 선언 및 정의
	char szname[32] = { 0 };

	//사용자로부터 이름(문자열)을 입력받는다.
	printf("이름을 입력하세요: ");
	//사용자가 입력한 문자들을 문자 배열에 모두 저정한다.
	gets_s(szname,sizeof(szname));
	
	//배열에 저장된 이름ㅇ르 화면에 출력한다.
	printf("당신의 이름은 ");
	puts(szname);
	puts("입니다.");

	return 0;
}
/*/================================//
 p.066 - gets01.c
//================================/*/

#include<stdio.h>

int main(void) {

	int x = 10;

	//문자상수를 화면에 출력한다.
	putchar('B');
	// '\n'은 개행문자이므로 알파벳 문자가 화면에 보이는 것이 아니다.
	putchar('\n');

	//앞서 개행문자가 출력됐으므로 A는 다음 행에 출력된다.
	printf("%c\n", 'A');

	//%d라는  형식 문자에 맞춰 변수 x에 담긴 정보를 출력한다.
	printf("x는 %d 입니다.\n", x);
	return 0;
}
/*/================================//
 p.071 - escseq01.c
//================================/*/

#include<stdio.h>

int main(void) {

	// 문자 상수를 ASCII코드 문자 형식으로 출력한다.
	printf("%c\n", 'A');
	// 문자 'A'의 ASCII 코드값(65)에 1을 더한 값을 문자로 출력한다.
	printf("%c\n", 'A' + 1);
	// 문자 상수를 ASCII코드 문자형식으로 출력한다.
	printf("%c\n", 'C');

	// 문자 'A'의 ASCII 코드값을 10진수(%d)로 출력한다.
	printf("%d\n", 'A');
	// 문자 'A'의 ASCII 코드값에 1을 더하고 10진수 (%d)로 출력한다.
	printf("%d\n", 'A' + 1);
	// 문자 'C'의 ASCII 코드값을 10진수(%d)로 출력한다.
	printf("%d\n", 'C');

	// 10진수(정수)를 문자(ASCII)로 출력한다.
	printf("%c\n", 65);
	printf("%c\n", 65 + 1);
	printf("%c\n", 67);
	return 0;
}
/*/================================//
 p.075 - charint01.c
//================================/*/

#include<stdio.h>

int main(void) {

	//int형 상수 10을 10진 (부호가 있는) 정수형식으로 출력한다.
	printf("%d\n", 10);
	//10을 '부호가 없는' 정수형식으로 출력한다.
	printf("%u\n", 10);
	//unsigned int 형 상수 10U을 %d형식으로 출력한다.
	printf("%d\n", 10U);
	//unsigned int형 상수를 %u 형식으로 출력한다.
	printf("%u\n", 10U);

	//부호가 있는 32비트 정수로 표현할 수 있는 가장 큰 수를 출력한ㄴ다.
	printf("%d\n", 2147483647);
	//부호가 있는 32비트 '범위를 넘어선' 정수를 출력한다.
	printf("%d\n", 2147483648);
	//부호가 없는 32비트로 출력하므로 값이 제대로 출력된다.
	printf("%u\n", 2147483648);

	//-1을 부호가 있는 10진수 형식으로 출력한다.
	printf("%d\n", -1);
	//같은 값(-1)이지만 부호가 없는 형식으로 출력하면 전혀 다른 값이 된다.
	printf("%u\n", -1);
	return 0;
}
/*/================================//
 p.077 - intover01.c
//================================/*/

#include<stdio.h>

int main(void) {

	//부호가 있는 64비트 정수형 변수 선언 및 정의
	long long int lldData = 4294967295LL;

	//64비트 정보를 32비트로 형식 문자로 출력한다.
	printf("%d\n", lldData);
	printf("%u\n", lldData);

	//32비트로는 표현할 수 없는 범위의 정보를 출력해본다.
	//제대로 된 결과를 기대할 수 없다.
	printf("%u\n", lldData + 1);
	printf("%u\n", lldData + 2);
	printf("%u\n", lldData + 3);

	//64비트 정보를 64비트 형식 문자(%lld)로 출력한다.
	printf("%lld\n", lldData + 1);
	printf("%lld\n", lldData + 2);
	printf("%lld\n", lldData + 3);

	return 0;
}
/*/================================//
 p.078 - longlongint01.c
//================================/*/

#include<stdio.h>

int main(void) {

	//실수 자료 형식의 메모리 크기(바이트 단위)를 출력
	printf("%d\n", sizeof(123.456f));
	printf("%d\n", sizeof(123.456));

	//float 형식을 실수 형식으로 출력
	printf("%f\n", 123.456f);		// float

	//double 형식을 실수 형식으로 출력
	printf("%f\n", 123.456);		//double
	printf("%lf\n", 123.456);		//long double

	return 0;
}
/*/================================//
 p.082 - floatprint01.c
//================================/*/

#include<stdio.h>

int main(void) {

	printf("%f\n",
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F +
		0.1F + 0.1F + 0.1F + 0.1F + 0.1F 
	);

	return 0;
}
/*/================================//
 p.083 - floatacc01.c
//================================/*/

#include<stdio.h>

int main(void) {

	double dData = 123.456;
	printf("%f, %f\n", dData, -123.456);

	//소수점 2번째 자리에서 반올림하고 1자리까리 출력
	printf("%.1f\n", dData);
	//소수점 3번째 자리에서 반올림하고 2자리까지 출력
	printf("%.2f\n", dData);
	//소수점 4번째 자리에서 반올림하고 3자리까지 출력
	printf("%.3f\n", dData);

	printf("%8d\n", 123);
	//소수점을 포함해 12자리로 출력. 단, 소수점 이하 4번째 자리에서 
	//반올림하고 3자리까지 출력한다.
	printf("%12.3f\n", dData);
	printf("%012.3f\n", dData);


	return 0;
}
/*/================================//
 p.084 - floatformat01.c
//================================/*/

#include<stdio.h>

int main(void) {

	int nAge = 0;

	printf("나이를 입력하세요. : ");
	//사용자가 입력한 정보를 int 형식으로 해석하고 nAge 변수에 저장한다.
	//그리고 & 기혼는 주소 연산자이며
	//&nAge는 nAge변수의 주소라는 의미이다.
	scanf_s("%d", &nAge);

	printf("당신의 나이는 %d세 입니다. \n", nAge);
	return 0;
}
/*/================================//
 p.087 - scanfint01.c
//================================/*/

#include<stdio.h>
#pragma warning (disable: 4996) 

int main(void) {
	char cName[10];
	int nAge = 0;

	scanf("나이를 입력하세요. %d%*c", &nAge);
	printf("이름을 입력하세요. : ");
	gets(cName);

	printf("당신의 나이는 %d살이고 이름은 \'%s\'입니다.",nAge,cName);
	
	return 0;
}
/*/================================//
 p.088 - 03-01
//================================/*/

